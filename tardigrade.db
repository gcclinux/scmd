{"id":1,"key":"$ go clean -modcache","data":"GO command to delete all downloaded go mod cache"}
{"id":2,"key":"$ go mod init github.com/gcclinux/tardigrade","data":"GO initialise the go mod file name and path"}
{"id":3,"key":"$ go mod tidy","data":"GO delete unused modules from a project"}
{"id":4,"key":"$ go get -u github.com/gcclinux/tardigrade","data":"GO download specific available mod from github"}
{"id":5,"key":"$ go test -coverprofile=coverage.out && go tool cover -html=coverage.out","data":"GO create and launch a test cover profile to show what has test enabled and what is missing"}
{"id":6,"key":"$ go build -o tardigrade-$(uname)-$(uname -m) *.go","data":"GO build and compile an executable name with type and architecture in GO"}
{"id":7,"key":"$ df -kl | awk '{COUNTER+=$3} END {print COUNTER}' | awk '{$1/=1024;printf %.2fMB\n,$1}'","data":"Calculate in MB total size of utilised disk space"}
{"id":8,"key":"$ sudo -u www-data php occ trashbin:cleanup --all-users","data":"Nextcloud command to clean all user deleted items"}
{"id":9,"key":"$ sudo -u www-data php occ maintenance:mode --on ","data":"Nextcloud enable maintenance mode"}
{"id":10,"key":"$ sudo -u www-data php occ maintenance:mode --off ","data":"Nextcloud disable maintenance mode"}
{"id":11,"key":"$ sudo -u www-data php occ files:scan --path=user/files/Photos [user_name]","data":"Nextcloud rescan or scan a particular folder for a specific user"}
{"id":12,"key":"PS> New-NetFirewallRule -DisplayName SAMBA -Direction Inbound -LocalPort 445 -Protocol","data":"PowerShell Disable Firewall Rule for  Port 445"}
{"id":13,"key":"PS> New-NetFirewallRule -DisplayName SAMBA -Direction Inbound -LocalPort 445 -Protocol","data":"PowerShell Enable Firewall Rule for Port 445"}
{"id":14,"key":"PS> taskkill /IM WhatsApp.exe /F","data":"PowerShell kill running task Example"}
{"id":15,"key":"PS> rem shutdown /s /t 10","data":"Powershell Shutdown Windows PC through command"}
{"id":16,"key":"PS> Get-PnpDevice -PresentOnly | Where-Object { $_.InstanceId -match '^USB'}","data":"PowerShell list all attached USB devices"}
{"id":17,"key":"PS> $Env:Path","data":"Powershell display current environment path"}
{"id":18,"key":"PS> $Env:Path +=';C:\\Users\\ricar\\gradle-7.3.3\\bin'","data":"Powershell add Gradle to exiting path example"}
{"id":19,"key":"PS> Restart-Computer","data":"Powershell reboot windows PC"}
{"id":20,"key":"PS> Get-WmiObject –class Win32_processor | ft NumberOfCores,NumberOfLogicalProcessors","data":"Powershell list Number of CPU cores and Processors"}
{"id":21,"key":"PS> winget install --id Git.Git -e --source winget","data":"Powershell install application via command line using winget"}
{"id":22,"key":"$ df -hT /","data":"Linux Display / root filesystem type"}
{"id":23,"key":"$ sudo sntp -sS time.apple.com","data":"Darwin install Alternative ntpdate for MacOS"}
{"id":24,"key":"$ sudo pacman -Syu --noconfirm","data":"EndevourOS - ArchLinux update command"}
{"id":25,"key":"% spctl --add `pwd`/scmd-Darwin-arm64","data":"Darwin disable can’t be opened because apple cannot check it for malicious software"}
{"id":26,"key":"$ go run *.go --web","data":"GO command to compile and to launch at the same time"}
{"id":27,"key":"$ go get -u","data":"Go command to update all required mods configured on the mod.go file"}
{"id":28,"key":"$ shutdown now","data":"Linux command to power-down the system emmidiately"}
{"id":29,"key":"$ echo \"$(id -un) ALL=(ALL) NOPASSWD: ALL\" | sudo tee -a $(echo /etc/sudoers.d/$(echo 10-$(id -un)-nopasswd))","data":"WARNING: Linux command that disables sudo prompting for password when executing"}
{"id":30,"key":"$ sudo pacman -Sy neofetch --noconfirm","data":"EndeavourOS arch Linux command to install a package called neofetch"}
{"id":31,"key":"$ flatpak install flathub io.atom.Atom","data":"Linux compatible with flatpak installing Atom IDE via command line"}
{"id":32,"key":"$ yay -S signal-desktop --noconfirm","data":"EndeavourOS archlinux yay command to install signal-desktop package with no confirmation"}
{"id":33,"key":"$ yes | sudo pacman -Sy nfs-utils","data":"EndeavourOS arch command to install NFS Server by passing yes without the prompt"}
{"id":34,"key":"$ sudo sed -i \"s/^UID_MIN.*1000/UID_MIN 500/g\" /etc/login.defs","data":"Linux command to reduce the minimum user ID from 1000 down to 500 being the lowest"}
{"id":35,"key":"$ sudo sed -i \"s/^GID_MIN.*1000/GID_MIN 20/g\" /etc/login.defs","data":"Linux command to reduce the minimum Group ID from 1000 down to 20 being the lowest"}
{"id":36,"key":"$ sudo groupadd -g 20 macbook","data":"Linux command to create a new group named Macbook and give a GID of 20"}
{"id":37,"key":"$ sudo useradd macbook -u 501 -g 20 -m -s /bin/bash","data":"Linux command to create a user called macbook with UID of 501 and add to Group GID 20 and setting bash as the shell"}
{"id":38,"key":"$ sudo systemctl restart nfs-server","data":"Linux command to restart a service in the case NFS Server"}
{"id":39,"key":"$ sudo systemctl enable rpc-statd.service","data":"Linux command to enable the rpc-statd.service so it starts automatic when system reboot"}
{"id":40,"key":"GUI: In File Explorer right-click on the This PC (or Computer) icon, then click Properties -> Advanced System Settings -> Environmental Variables.","data":"Windows 10 Permanent PATH editing through the GUI"}
{"id":41,"key":"$ sudo do-release-upgrade","data":"Ubuntu Linux command to upgrade the distribution to the next available level"}
{"id":42,"key":"$ sudo apt update && sudo apt upgrade -y","data":"Ubuntu or debian based system to update the catalog and then upgrade individual packages required."}
{"id":43,"key":"$ ffmpeg -acodec copy -vcodec h264 -i input_file_name.mkv output_file_name.h264.avi","data":"Linux using ffmpeg command to re-encode video format from mkv to h264 (mpg4) "}
{"id":44,"key":"$ streamer -q -c /dev/video0 -f rgb24 -r 3 -t 00:00:10 -o video.avi","data":"Linux command using streamer to capture webcam or usb-video device and save to local file."}
{"id":45,"key":"$ mencoder input_video_file.ogg -o new_output_video.avi -oac mp3lame -ovc lavc","data":"Linux command using mencoder to convert ogg video file to a avi format with mp3 sound format"}
{"id":46,"key":"$ ffmpeg -i inputfile.flv -f mp3 \"Bobby Yarsulik - MineCraft.mp3\"","data":"Linux using ffmpeg command to convert a flv format audio file to and mp3 format file"}
{"id":47,"key":"% /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"","data":"Darwin on MacOS to install Homebrew package manager that provides software and packages not available officially by Apple"}
{"id":48,"key":"$ flatpak update","data":"Linux compatible with flatpak update all installed packages"}
