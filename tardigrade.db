{"id":1,"key":"$ go clean -modcache","data":"GO command to delete all downloaded go mod cache"}
{"id":2,"key":"$ go mod init github.com/gcclinux/tardigrade","data":"GO initialise the go mod file name and path"}
{"id":3,"key":"$ go mod tidy","data":"GO delete unused modules from a project"}
{"id":4,"key":"$ go get -u github.com/gcclinux/tardigrade","data":"GO download specific available mod from github"}
{"id":5,"key":"$ go test -coverprofile=coverage.out && go tool cover -html=coverage.out","data":"GO create and launch a test cover profile to show what has test enabled and what is missing"}
{"id":6,"key":"$ go build -o tardigrade-$(uname)-$(uname -m) *.go","data":"GO build and compile an executable name with type and architecture in GO"}
{"id":7,"key":"$ df -kl | awk '{COUNTER+=$3} END {print COUNTER}' | awk '{$1/=1024;printf %.2fMB\n,$1}'","data":"Calculate in MB total size of utilised disk space"}
{"id":8,"key":"$ sudo -u www-data php occ trashbin:cleanup --all-users","data":"Nextcloud command to clean all user deleted items"}
{"id":9,"key":"$ sudo -u www-data php occ maintenance:mode --on ","data":"Nextcloud enable maintenance mode"}
{"id":10,"key":"$ sudo -u www-data php occ maintenance:mode --off ","data":"Nextcloud disable maintenance mode"}
{"id":11,"key":"$ sudo -u www-data php occ files:scan --path=user/files/Photos [user_name]","data":"Nextcloud rescan or scan a particular folder for a specific user"}
{"id":12,"key":"PS> New-NetFirewallRule -DisplayName SAMBA -Direction Inbound -LocalPort 445 -Protocol","data":"PowerShell Disable Firewall Rule for  Port 445"}
{"id":13,"key":"PS> New-NetFirewallRule -DisplayName SAMBA -Direction Inbound -LocalPort 445 -Protocol","data":"PowerShell Enable Firewall Rule for Port 445"}
{"id":14,"key":"PS> taskkill /IM WhatsApp.exe /F","data":"PowerShell kill running task Example"}
{"id":15,"key":"PS> rem shutdown /s /t 10","data":"Powershell Shutdown Windows PC through command"}
{"id":16,"key":"PS> Get-PnpDevice -PresentOnly | Where-Object { $_.InstanceId -match '^USB'}","data":"PowerShell list all attached USB devices"}
{"id":17,"key":"PS> $Env:Path","data":"Powershell display current environment path"}
{"id":18,"key":"PS> $Env:Path +=';C:\\Users\\ricar\\gradle-7.3.3\\bin'","data":"Powershell add Gradle to exiting path example"}
{"id":19,"key":"PS> Restart-Computer","data":"Powershell reboot windows PC"}
{"id":20,"key":"PS> Get-WmiObject –class Win32_processor | ft NumberOfCores,NumberOfLogicalProcessors","data":"Powershell list Number of CPU cores and Processors"}
{"id":21,"key":"PS> winget install --id Git.Git -e --source winget","data":"Powershell install application via command line using winget"}
{"id":22,"key":"$ df -hT /","data":"Linux Display / root filesystem type"}
{"id":23,"key":"$ sudo sntp -sS time.apple.com","data":"Darwin install Alternative ntpdate for MacOS"}
{"id":24,"key":"$ sudo pacman -Syu --noconfirm","data":"EndevourOS - ArchLinux update command"}
{"id":25,"key":"% spctl --add `pwd`/scmd-Darwin-arm64","data":"Darwin disable can’t be opened because apple cannot check it for malicious software"}
{"id":26,"key":"$ go run *.go --web","data":"GO command to compile and to launch at the same time"}
{"id":27,"key":"$ go get -u","data":"Go command to update all required mods configured on the mod.go file"}
{"id":28,"key":"$ shutdown now","data":"Linux command to power-down the system emmidiately"}
{"id":29,"key":"$ echo \"$(id -un) ALL=(ALL) NOPASSWD: ALL\" | sudo tee -a $(echo /etc/sudoers.d/$(echo 10-$(id -un)-nopasswd))","data":"WARNING: Linux command that disables sudo prompting for password when executing"}
{"id":30,"key":"$ sudo pacman -Sy neofetch --noconfirm","data":"EndeavourOS arch Linux command to install a package called neofetch"}
{"id":31,"key":"$ flatpak install flathub io.atom.Atom","data":"Linux compatible with flatpak installing Atom IDE via command line"}
{"id":32,"key":"$ yay -S signal-desktop --noconfirm","data":"EndeavourOS archlinux yay command to install signal-desktop package with no confirmation"}
{"id":33,"key":"$ yes | sudo pacman -Sy nfs-utils","data":"EndeavourOS arch command to install NFS Server by passing yes without the prompt"}
{"id":34,"key":"$ sudo sed -i \"s/^UID_MIN.*1000/UID_MIN 500/g\" /etc/login.defs","data":"Linux command to reduce the minimum user ID from 1000 down to 500 being the lowest"}
{"id":35,"key":"$ sudo sed -i \"s/^GID_MIN.*1000/GID_MIN 20/g\" /etc/login.defs","data":"Linux command to reduce the minimum Group ID from 1000 down to 20 being the lowest"}
{"id":36,"key":"$ sudo groupadd -g 20 macbook","data":"Linux command to create a new group named Macbook and give a GID of 20"}
{"id":37,"key":"$ sudo useradd macbook -u 501 -g 20 -m -s /bin/bash","data":"Linux command to create a user called macbook with UID of 501 and add to Group GID 20 and setting bash as the shell"}
{"id":38,"key":"$ sudo systemctl restart nfs-server","data":"Linux command to restart a service in the case NFS Server"}
{"id":39,"key":"$ sudo systemctl enable rpc-statd.service","data":"Linux command to enable the rpc-statd.service so it starts automatic when system reboot"}
{"id":40,"key":"GUI: In File Explorer right-click on the This PC (or Computer) icon, then click Properties -> Advanced System Settings -> Environmental Variables.","data":"Windows 10 Permanent PATH editing through the GUI"}
{"id":41,"key":"$ sudo do-release-upgrade","data":"Ubuntu Linux command to upgrade the distribution to the next available level"}
{"id":42,"key":"$ sudo apt update && sudo apt upgrade -y","data":"Ubuntu or debian based system to update the catalog and then upgrade individual packages required."}
{"id":43,"key":"$ ffmpeg -acodec copy -vcodec h264 -i input_file_name.mkv output_file_name.h264.avi","data":"Linux using ffmpeg command to re-encode video format from mkv to h264 (mpg4) "}
{"id":44,"key":"$ streamer -q -c /dev/video0 -f rgb24 -r 3 -t 00:00:10 -o video.avi","data":"Linux command using streamer to capture webcam or usb-video device and save to local file."}
{"id":45,"key":"$ mencoder input_video_file.ogg -o new_output_video.avi -oac mp3lame -ovc lavc","data":"Linux command using mencoder to convert ogg video file to a avi format with mp3 sound format"}
{"id":46,"key":"$ ffmpeg -i inputfile.flv -f mp3 \"Bobby Yarsulik - MineCraft.mp3\"","data":"Linux using ffmpeg command to convert a flv format audio file to and mp3 format file"}
{"id":47,"key":"% /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"","data":"Darwin on MacOS to install Homebrew package manager that provides software and packages not available officially by Apple"}
{"id":48,"key":"$ flatpak update","data":"Linux compatible with flatpak update all installed packages"}
{"id":49,"key":"$ sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt","data":"Install letsencrypt on any supported linux platform"}
{"id":50,"key":"$ sudo htpasswd -c /etc/apache2/git.passwd gituser_name","data":"Create http password for git repository by create a htpasswd file in apache2 "}
{"id":51,"key":"$ alias ghpush='git add . && git commit -m \"$(date)\" && git branch -M main && git push -u origin main'","data":"Linux alias for Git push commit with date and easy sync, take current time stamp as message"}
{"id":52,"key":"$ rsync -av --delete empty_folder/  /to_be_delete_folder/\t","data":"In Linux this is the quickest way to delete millions of files and folders in a singe command"}
{"id":53,"key":"$ sudo update-alternatives --config java","data":"Linux and a easy way to update alternative PATH for an executable binary"}
{"id":54,"key":"$ readlink -f /usr/bin/java","data":"Linux a easy way to display java or go or any other binary's real path by following link"}
{"id":55,"key":"$ java -Xmx4096M -Xms4096M -jar application.jar","data":"Start a compiled java application with 4GB of reserved memory."}
{"id":56,"key":"$ smbclient -U sambaguest -L 192.168.0.100","data":"Linux as specific user sambaguest list shares on specific IP address"}
{"id":57,"key":"$ sudo smbstatus","data":"On linux check and display samba server status and connection"}
{"id":58,"key":"$ sudo useradd -m samba && sudo smbpasswd -a samba","data":"Linux create a new samba user and immediately set a password for the new user also"}
{"id":59,"key":"$ sudo mount -t cifs -o username=samba,password=samba //192.168.0.3/SAMBA /samba","data":"Example how to mount a samba share from a windows PC onto a linux /samba folder with specific user & password"}
{"id":60,"key":"% sudo mount -o resvport,rw -t nfs host:/export/NFS /Users/user_name/nfs","data":"Darwin mounting specific NFS share onto local user folder called nfs (required UID & GID to be setup in host)"}
{"id":61,"key":"$ sudo flatpak override <package_name_here> --filesystem=<path_here>","data":"Override flatpak permission command to give access to specific  path for the App "}
{"id":62,"key":"$ flatpak install flathub com.github.tchx84.Flatseal","data":"Flatseal is a graphical utility to review and modify permissions from your Flatpak applications."}
{"id":63,"key":"$ speedometer -r eno1 -t eno1","data":"Linux command to monitor network speed receive (RX) and Transmit (TX) "}
{"id":64,"key":"$ bmon","data":"Linux terminal network transfer speed monitor receive (RX) and Transmit (TX) "}
{"id":65,"key":"$ sudo lshw -C network","data":"Linux terminal command to list all physical network devices details including vendor, serial, product,capacity, etc"}
{"id":66,"key":"$ ssh-keygen -t rsa","data":"Linux command to generate ssh public key for direct access to git servers or any other system that has the public key saved."}
{"id":67,"key":"func isNumber(in string) (result bool) {\r\n\tresult = true\r\n\t_, err := strconv.ParseInt(in, 10, 0)\r\n\tif err != nil {\r\n\t\treturn false\r\n\t}\r\n\treturn result\r\n}","data":"Golang is Number function to check if a string parsed is an integer"}
{"id":68,"key":"public static boolean isNumeric(String strNum) {\r\n    if (strNum == null) {\r\n        return false;\r\n    }\r\n    try {\r\n        double d = Double.parseDouble(strNum);\r\n    } catch (NumberFormatException nfe) {\r\n        return false;\r\n    }\r\n    return true;\r\n}","data":"Java isNumber class to check if a string parsed is an integer"}
{"id":69,"key":"func replaceLast(x, y, z string) (x2 string) {\r\n\ti := strings.LastIndex(x, y)\r\n\tif i == -1 {\r\n\t\treturn x\r\n\t}\r\n\treturn x[:i] + z + x[i+len(y):]\r\n}\r\n","data":"Golang replaceLast receives (string in, old string, new string) it replaces the last instance of the old string and return updated string"}
{"id":70,"key":"$ dnf check-update","data":"Fedora check which packages have available updates"}
{"id":71,"key":"$ dnf updateinfo","data":"Fedora check a summary of updates available"}
{"id":72,"key":"$ dnf updateinfo list","data":"Fedora check list of updates and which types they belong to"}
{"id":73,"key":"$ sudo dnf upgrade","data":"Fedora start updating system run the following command"}
{"id":74,"key":"$ sudo shutdown -r now","data":"Fedora perform a reboot immediately"}
{"id":75,"key":"func main() {\r\n    tpl := template.Must(template.New(\"mytemplate\").Parse(`\r\n        <pre><code>{{.Code}}</code></pre>\r\n    `))\r\n\r\n    data := struct {\r\n        Code string\r\n    }{\r\n        `func main() {\r\n            fmt.Println(\"Hello, World!\")\r\n        }`,\r\n    }\r\n\r\n    err := tpl.Execute(os.Stdout, data)\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n}","data":"Golang example code snippet that shows how to display formatted code in a Go HTML template"}
{"id":76,"key":"func main() {\r\n\ttmpl, err := template.New(\"example\").Parse(\"{{println \\\"Hello, World!\\\"}}\")\r\n\tif err != nil {\r\n\t\tfmt.Println(\"Error parsing template:\", err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\tif err := tmpl.Execute(os.Stdout, nil); err != nil {\r\n\t\tfmt.Println(\"Error executing template:\", err)\r\n\t\tos.Exit(1)\r\n\t}\r\n}","data":"Golang show how to use the println function inside a Go template using the {{println}} action."}
{"id":77,"key":"public class Convert {\r\n//  convert string to int java\r\n   public static void main(String args[]) {\r\n       String str = \"111\";\r\n\r\n       int num1 = Integer.parseInt(str);\r\n       System.out.println(\"parseInt of the String = \"\r\n               + num1);\r\n\r\n       int num2 = Integer.parseInt(str, 2);//binary number\r\n       System.out.println(\"parseInt of the String with radix parameter = \" + num2);\r\n   }\r\n}","data":"Java class that converts a given string to an integer"}
{"id":78,"key":"$ flatpak info --show-permissions <package_name_here>","data":"Flatpak package show existing permission of a specific package"}
{"id":79,"key":"{{$odd := true}}\r\n    {{range $data := .AllData}}\r\n        {{if $odd}}\r\n            <I>{{ $data }}</I><BR>\r\n        {{else}}\r\n            <B>{{ $data }}</B>\r\n        {{end}}\r\n    {{$odd = not $odd}}\r\n{{end}}","data":"Golang template  odd or even loop that will format based current status"}
{"id":80,"key":"func main() {\r\n  myInt := 10\r\n  myString := strconv.Itoa(myInt)\r\n  fmt.Println(myString)\r\n}","data":"Golang convert integer to string "}
{"id":81,"key":"func main() {\r\n\tmyStr := \"320\"\r\n\ttest, err := strconv.ParseInt(myStr, 10, 0)\r\n\tif err != nil {\r\n\t\tfmt.Println(\"Error during conversion\")\r\n\t\treturn\r\n\t}\r\n\tfmt.Println(test)\r\n}","data":"Golang convert string to integer using ParseInt"}
{"id":82,"key":"func main() {\r\n\tmyStr := \"320\"\r\n\ttest, err := strconv.Atoi(myStr)\r\n\tif err != nil {\r\n\t\tfmt.Println(\"Error during conversion\")\r\n\t\treturn\r\n\t}\r\n\tfmt.Println(test)\r\n}","data":"Golang convert string to integer using Atoi"}
{"id":83,"key":"#include <stdio.h>\r\n#include <string.h>\r\nchar isNumber(char *text)\r\n{\r\n    int j;\r\n    j = strlen(text);\r\n    while(j--)\r\n    {\r\n        if(text[j] > 47 && text[j] < 58)\r\n            continue;\r\n        return 0;\r\n    }\r\n    return 1;\r\n}\r\nint main(){\r\n    char tmp[16];\r\n    scanf(\"%s\", tmp);\r\n\r\n    if(isNumber(tmp))\r\n        return printf(\"is a number\\n\");\r\n    return printf(\"is not a number\\n\");\r\n}","data":"C language isNumber function to check if a string parsed is an integer"}
{"id":84,"key":"$ gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top true","data":"How to move the \"Show Applications\" button in dock from right to left in Ubuntu Desktop"}
{"id":85,"key":"$ gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top false","data":"How to move the \"Show Applications\" button in dock from left to right in Ubuntu Desktop"}
{"id":86,"key":"$ sudo snap install whatsie","data":"Ubuntu install WhatSie - WhatsApp for Linux, simply use the following command"}
{"id":87,"key":"$ sudo snap install code --classic","data":"Ubuntu install Visual Studio Code (vscode) for Development using snap"}
{"id":88,"key":"$ sudo apt-get install fuse libfuse2 && sudo modprobe -v fuse && sudo addgroup fuse && sudo adduser $USER fuse","data":"Ubuntu and AppImages require a Linux technology called Filesystem in Userspace (or short FUSE) Install Fuse"}
{"id":89,"key":"$ sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf <go-version>.linux-amd64.tar.gz","data":"Linux install or update Go development language from source"}
{"id":90,"key":"$ alias sat='curl -s -L https://bit.ly/3uC4ke7 | bash' && source ~/.bashrc","data":"Linux with bash configure Small Admin Tool (SAT) for home users with administration tasks - Currently support Ubuntu, EndeavourOS, Fedora, Zorin, Termux "}
{"id":91,"key":"$ nmcli con show","data":"Linux view all the configured values (default and custom) for all interfaces"}
{"id":92,"key":"$ nmcli dev status","data":"Linux Now the status of all the connection network devices"}
{"id":93,"key":"$ systemctl status display-manager","data":"Linux show the current status as well as what is the running  display-manager "}
{"id":94,"key":"$ git config --global user.email \"you@example.com\"","data":"Git config settings up the global user.email address"}
{"id":95,"key":"$ git config --global user.name \"Your Name\"","data":"Git config settings up the global user.name globaly"}
{"id":96,"key":"$git config --global user.name ","data":"Git config get the global user name"}
{"id":97,"key":"$ git config --global user.email","data":"Git config get the global user email"}
{"id":98,"key":"$ lscpu","data":"Linux lscpu command allows you to list information about CPUs that are present in the system, including the number of CPUs, their architecture, vendor, family, model, CPU caches,"}
{"id":99,"key":"$ echo $(grep -c processor /proc/cpuinfo)","data":"Linux command to list number of CPU threads"}
{"id":100,"key":"$ nproc","data":"Linux show maximum user processes (nproc) limit on Linux counts the number of threads within all processes that can exist for a given user"}
{"id":101,"key":"$ sudo vcgencmd measure_temp","data":"Command line tool designed by Broadcom used on the RaspberryPi. This Python package is a native binding to that tool"}
{"id":102,"key":"$ echo CPU - $(top -b -n 1 |grep Cpu | awk '{print $2}')%","data":"Linux using \"top\" command to display current CPU load "}
{"id":103,"key":"$ apt install psensor","data":"psensor is a graphical hardware temperature monitor for Linux. It can monitor: the temperature of the motherboard and CPU sensors (using lm-sensors)"}
{"id":104,"key":"$ sudo apt -y install grafana && sudo systemctl enable --now grafana-server && sudo systemctl start grafana-server.service && systemctl status grafana-server.service","data":"Ubuntu process to install and enable Canonical Grafana (default port:3000, user:admin, pass:admin)"}
{"id":105,"key":"$ /usr/bin/screen -dmS SCMD <PATH>/scmd-Linux-aarch64 --web -port 3333 -service","data":"Linux using screen command to start application such as scmd in the background as a service "}
{"id":106,"key":"func main() {\r\n    num := 2\r\n    switch num {\r\n    case 1:\r\n        fmt.Println(\"The number is 1\")\r\n    case 2:\r\n        fmt.Println(\"The number is 2\")\r\n    case 3:\r\n        fmt.Println(\"The number is 3\")\r\n    default:\r\n        fmt.Println(\"The number is not 1, 2, or 3\")\r\n    }\r\n}","data":"Golang example of using the switch statement, In this example, we have a variable num with a value of 2. We then use the switch statement to check the value  the output will be:  The number is 2"}
{"id":107,"key":"<button onclick=\"downloadFile()\">Download file</button>\r\n\r\n<script>\r\nfunction downloadFile() {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open('GET', 'http://example.com/file.txt', true);\r\n  xhr.responseType = 'blob';\r\n\r\n  xhr.onload = function() {\r\n    if (xhr.status === 200) {\r\n      var url = window.URL.createObjectURL(xhr.response);\r\n      var a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'file.txt';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      setTimeout(function() {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);  \r\n      }, 0);\r\n    }\r\n  };\r\n  xhr.send();\r\n}\r\n</script>","data":"HTML This code creates a button with an onclick event that triggers the downloadFile() function in JavaScript. The function creates an XMLHttpRequest object, sets its responseType to 'blob', and sends a GET request to the specified URL."}
{"id":108,"key":"package main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"io/ioutil\"\r\n    \"net/http\"\r\n    \"html/template\"\r\n)\r\n\r\nfunc handler(w http.ResponseWriter, r *http.Request) {\r\n    if r.Method == \"POST\" {\r\n        url := r.FormValue(\"url\")\r\n        resp, err := http.Get(url)\r\n        if err != nil {\r\n            fmt.Fprintf(w, \"Error: %v\", err)\r\n            return\r\n        }\r\n        defer resp.Body.Close()\r\n        body, err := ioutil.ReadAll(resp.Body)\r\n        if err != nil {\r\n            fmt.Fprintf(w, \"Error: %v\", err)\r\n            return\r\n        }\r\n        fmt.Fprintf(w, \"%s\", body)\r\n    } else {\r\n        tmpl, err := template.ParseFiles(\"template.html\")\r\n        if err != nil {\r\n            fmt.Fprintf(w, \"Error: %v\", err)\r\n            return\r\n        }\r\n        tmpl.Execute(w, nil)\r\n    }\r\n}\r\n\r\nfunc main() {\r\n    http.HandleFunc(\"/\", handler)\r\n    http.ListenAndServe(\":8080\", nil)\r\n}","data":"Golang create a basic web browser in Go, you can use the \"net/http\" and \"html/template\" packages that are included in the standard library"}
{"id":109,"key":"package main\r\n\r\nimport (\r\n    \"html/template\"\r\n    \"net/http\"\r\n)\r\n\r\nfunc main() {\r\n    http.HandleFunc(\"/\", homeHandler)\r\n    http.ListenAndServe(\":8080\", nil)\r\n}\r\n\r\nfunc homeHandler(w http.ResponseWriter, r *http.Request) {\r\n    // Parse the template file\r\n    tmpl, err := template.ParseFiles(\"template.html\")\r\n    if err != nil {\r\n        http.Error(w, err.Error(), http.StatusInternalServerError)\r\n        return\r\n    }\r\n\r\n    // Execute the template and pass in data\r\n    data := struct {\r\n        Title string\r\n        Body  string\r\n    }{\r\n        Title: \"Welcome to my website!\",\r\n        Body:  \"Thanks for visiting!\",\r\n    }\r\n\r\n    err = tmpl.Execute(w, data)\r\n    if err != nil {\r\n        http.Error(w, err.Error(), http.StatusInternalServerError)\r\n        return\r\n    }\r\n}","data":"Golang web server with template a simple example to help starting"}
{"id":110,"key":"import java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.io.PrintWriter;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\n\r\npublic class Main {\r\n  public static void main(String args[]) {\r\n    WebServer ws = new WebServer();\r\n    ws.start();\r\n  }\r\n}\r\n\r\nclass WebServer {\r\n  protected void start() {\r\n    ServerSocket s;\r\n    System.out.println(\"Webserver starting up on port 80\");\r\n    System.out.println(\"(press ctrl-c to exit)\");\r\n    try {\r\n      // create the main server socket\r\n      s = new ServerSocket(80);\r\n    } catch (Exception e) {\r\n      System.out.println(\"Error: \" + e);\r\n      return;\r\n    }\r\n\r\n    System.out.println(\"Waiting for connection\");\r\n    for (;;) {\r\n      try {\r\n        Socket remote = s.accept();\r\n        System.out.println(\"Connection, sending data.\");\r\n        BufferedReader in = new BufferedReader(new InputStreamReader(remote.getInputStream()));\r\n        PrintWriter out = new PrintWriter(remote.getOutputStream());\r\n\r\n        String str = \".\";\r\n        while (!str.equals(\"\"))\r\n          str = in.readLine();\r\n\r\n        out.println(\"HTTP/1.0 200 OK\");\r\n        out.println(\"Content-Type: text/html\");\r\n        out.println(\"Server: Bot\");\r\n        out.println(\"\");\r\n        out.println(\"<H1>Welcome to the Ultra Mini-WebServer</H2>\");\r\n        out.flush();\r\n        remote.close();\r\n      } catch (Exception e) {\r\n        System.out.println(\"Error: \" + e);\r\n      }\r\n    }\r\n  }\r\n}","data":"Java web server as simple example to help you started"}
{"id":111,"key":"$ go get -u github.com/gcclinux/scmd","data":"test"}
{"id":112,"key":"func WriteLogToFile(message string) {\r\n    file, err := os.OpenFile(\"log.txt\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n    defer file.Close()\r\n\r\n    logger := log.New(file, \"\", log.LstdFlags)\r\n    logger.Println(message)\r\n}","data":"Golang function to write log information or data to a local file."}
{"id":113,"key":"$ conda config --set auto_activate_base false","data":"If you'd prefer that conda's base environment not be activated on startup,    set the auto_activate_base parameter to false"}
{"id":114,"key":"sudo apt-get update && sudo apt-get -y dist-upgrade && sudo apt-get install raspberrypi-ui-mods rpi-chromium-mods","data":"Install GUI desktop on rapsberry PI, update apt, and then install the raspberrypi-ui-mods and rpi-chromium-mods packages by typing out the following commands"}
{"id":115,"key":"sudo raspi-config","data":"Raspberry Pi or raspbian configuration tool for all settings including wifi, display, network, ssh and GPU configuration."}
{"id":116,"key":"$ wget -qO- https://brightdata.com/static/earnapp/install.sh > /tmp/earnapp.sh && sudo bash /tmp/earnapp.sh","data":"Download, install and configure earnapp on any linux flavour via command line!"}
{"id":117,"key":"$ sudo iw wlan0 get power_save","data":"Debian check if power save is enabled, this will put network card to sleep"}
{"id":118,"key":"$ sudo iw wlan0 set power_save off","data":"Debian disable NIC or network card from power save or sleep"}
{"id":119,"key":"$ sudo grep psk= /etc/NetworkManager/system-connections/* | awk -F\"/\" '{print substr($0, index($0, $5))}' | sed 's/.nmconnection:psk=/ = /g'","data":"Display stored wifi connections in ubuntu linux"}
{"id":120,"key":"PS> winget install Vim -e --source winget","data":"Powershell install application via command line using winget"}
{"id":121,"key":"$ sudo systemctl disable earnapp","data":"Linux command to disable the earnapp.service app so it won't start automatic when system reboot"}
{"id":122,"key":"$ sudo systemctl daemon-reload","data":"Linux command to restart the systemctl daemon-reload on the Server"}
{"id":123,"key":"$ sudo systemctl reset-failed","data":"Linux command to reset failed services listed in systemctl"}
{"id":124,"key":"$ sudo update-alternatives --config php","data":"Linux command to set an alternative or a default version of a specific app in this case to choose php version"}
{"id":125,"key":"$ sudo apt purge openssh-server && sudo apt autoremove","data":"Debian and Ubuntu completely delete and remove a package application from command line"}
{"id":126,"key":"$ awk '/32 host/ { print f } {f=$2}' <<< \"$(</proc/net/fib_trie)\" | sort -u","data":"Linux command get local IP address through proc "}
{"id":127,"key":"$ awk '/32 host/ { print f } {f=$2}' /proc/net/fib_trie | sort -u","data":"Linux command get local IP address through proc"}
{"id":128,"key":"$ sudo powertop","data":"Linux To inspect and monitor the power usage statistics, run the following command"}
{"id":129,"key":"% sw_vers","data":"Darwin or MacOS command to show what version of the OS is installed"}
{"id":130,"key":"% cd / && sudo dscl . -create /Users/oink UserShell /bin/bash UniqueID 666 PrimaryGroupID 1000","data":"Darwin command to create a new user called oink with specific shell id and gorup"}
{"id":131,"key":"CMD> wlan profile YOUR_WIFI_NAME key=clear","data":"Windows command to show the wifi password under Key Content if you forgot what your password is. "}
{"id":132,"key":"$ sudo -u www-data php /server/www/n/updater/updater.phar","data":"Nextcloud update command using the command line updater and not occ "}
{"id":133,"key":"$ sudo nmcli dev wifi list","data":"How can I display the list of available wifi (Wi-Fi) networks via command line on Ubuntu or any other Linux"}
{"id":134,"key":"$ sudo snap install network-manager","data":"Ubuntu install network application manager via snap"}
{"id":135,"key":"$ sudo nmcli dev wifi connect \"network-ssid\" password \"network-password\"","data":"How-to connect to wifi (Wi-Fi) using nmcli a network application manager for Ubuntu or other Linux"}
{"id":136,"key":"$ sudo nmcli --ask dev wifi connect","data":"How-to connect to wifi (Wi-Fi) using nmcli a network application manager for Ubuntu or other Linux"}
{"id":137,"key":"$ sudo apt install network-manager","data":"Ubuntu install network application manager via apt"}
{"id":138,"key":"% sw_vers && echo \"Architecture: \\t\\t $(arch)\"","data":"Darwin or MacOS command to show OS version and architecture"}
{"id":139,"key":"% sysctl -n machdep.cpu.brand_string","data":"Darwin or MacOS command to show CPU model and type"}
{"id":140,"key":"% sw_vers && echo \"Architecture: \\t\\t $(arch)\" && echo \"CPUModel: \\t\\t $(sysctl -n machdep.cpu.brand_string)\"","data":"Darwin or MacOS command to show OS version and architecture & Model"}
{"id":141,"key":"$ sudo nmcli con show --active","data":"How-to show active wifi (Wi-Fi) connection using nmcli a network application manager for Ubuntu or other Linux"}
{"id":142,"key":"PS> $FormatEnumerationLimit = 200; Get-Module Microsoft.PowerShell.Utility | Format-List","data":"PowerShell List formatted views to expand hidden details in a query"}
{"id":143,"key":"$ autoexpect -f mount.win10 sudo mount -t cifs -o vers=3.0,username=user@outlook.com //192.168.1.100/SHARE /home/ubuntu/win10-share","data":"Linux command create expect file to automatically mount a windows filesystem, tested on ubuntu & fedora"}
{"id":144,"key":"$ sudo tar -C /usr/local -xzf go1.20.5.linux-amd64.tar.gz","data":"Linux quick example how-to install golang or go command from line"}
{"id":145,"key":"$ sudo -u www-data php /server/www/n/occ app:update --all","data":"Nextcloud update apps example using occ"}
{"id":146,"key":"$ sudo -u www-data php /server/www/n/occ app:enable richdocumentscode_arm64","data":"Nextcloud enable app that is already installed and updated"}
{"id":147,"key":"$ sudo -u www-data php /server/www/n/occ app:list","data":"Nextcloud list all available apps via command line using occ"}
{"id":148,"key":"cd '/var/lib/plexmediaserver/Library/Application Support/Plex Media Server'","data":"Ubuntu Preferences.xml location for plex server"}
{"id":149,"key":"$ PGPASSWORD=password pg_dump -h host_name -d db_name -U user_name -v -f host_name-db_name-file_name-`date '+%Y-%m-%d'`.sql","data":"Postgresql simple backup command using pb_dump or psql databases"}
{"id":150,"key":"$ df -h | awk '{print $6}' | egrep  \"/[a-z]\" > /backup/root-mounts-exclude && sudo rsync -avr --exclude-from='/backup/root-mounts-exclude' / /backup/root/","data":"In Linux this is the quickest way to backup root file system is by excluding all other mountpoints "}
{"id":151,"key":"PS> Get-PSDrive","data":"PowerShell drive is a data store location that you can access like a filesystem drive in PowerShell"}
{"id":152,"key":"PS> Copy-Item -Path \"SourcePath\" -Destination \"DestinationPath\" -Recurse -Force -Verbose","data":"PowerShell to Copy a Folder and contents – Overwrite Existing  with Verbose output."}
{"id":153,"key":"$ sudo -u www-data php occ config:system:set updater.release.channel --value=beta","data":"Nextcloud set update to beta or stable release"}
{"id":154,"key":"$ GIT_SSL_NO_VERIFY=true git clone https://github.com/gcclinux/tardigrade-mod.git","data":"Git clone skip certificate checking : server certificate verification failed. CAfile: none CRLfile: none"}
{"id":155,"key":"$ git config --global http.sslVerify \"false\"","data":"Git clone skip certificate checking : server certificate verification failed. CAfile: none CRLfile: none"}
{"id":156,"key":"$ openssl genrsa -des3 -out myCA.key 2048","data":"Using openssl generate the private key to become a local CA Password:localhost"}
{"id":157,"key":"$ openssl req -x509 -new -nodes -key myCA.key -sha256 -days 1825 -out myCA.pem","data":"Using openssl and the myCA.key password generate local ssl certificate TLS"}
{"id":158,"key":"$ sudo cp myCA.pem /usr/local/share/ca-certificates/myCA.crt","data":"Adding the Root Certificate to Linux renaming it from myCA.pem to myCA.crt"}
{"id":159,"key":"\r\n% sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" myCA.pem","data":"Adding the Root Certificate to MacOS - Darwin via cli"}
{"id":160,"key":"$ strings your_executable | grep \"GLIBC\"","data":"Find out what version of the GNU C Library (glibc) was used to compile a binary executable, you can use the strings command"}
{"id":162,"key":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nmain()\r\n{\r\n        char cYesNo = '\\0';\r\n        int iResp1 = 0;\r\n        int iResp2 = 0;\r\n        int iResp3 = 0;\r\n        int iResp4 = 0;\r\n        int iElapsedTime = 0;\r\n        int iCurrentTime = 0;\r\n        int iRandomNum = 0;\r\n        int iNow = 0;\r\n        int iWait = 0;\r\n        int i1 = 0;\r\n        int i2 = 0;\r\n        int i3 = 0;\r\n        int i4 = 0;\r\n        int iCounter = 0;\r\n\r\n        srand(time(NULL));\r\n\r\n        system (\"clear\");\r\n\r\n        printf(\"\\n\\nPlay a game of Concentration? ( y or n): \");\r\n        scanf(\"%c\", &cYesNo);\r\n\r\n        if (cYesNo == 'y' || cYesNo == 'Y' ) {\r\n                int iSelection = 0;\r\n\r\n                while ( iSelection != 5 ) {\r\n                                system (\"clear\");\r\n                                printf(\"\\n\");\r\n                                printf(\"1\\t Easy\\n\");\r\n                                printf(\"2\\t Medium\\n\");\r\n                                printf(\"3\\t Hard\\n\");\r\n                                printf(\"4\\t Extreme\\n\");\r\n                                printf(\"\\n\");\r\n                                printf(\"5\\t Quit\\n\");\r\n                                printf(\"\\n\");\r\n                                printf(\"Enter you level or quit (1-5): \");\r\n                                scanf(\"%d\", &iSelection);\r\n\r\n                        switch (iSelection) {\r\n\r\n                                case 1:{\r\n                                        i1 = rand() %100;\r\n                                        i2 = rand() %100;\r\n                                        i3 = rand() %100;\r\n\r\n                                        printf(\"\\nConcentrate on the next three numbers\\n\");\r\n                                        printf(\"\\n%d\\t%d\\t%d\\n\", i1, i2, i3);\r\n\r\n                                        iCurrentTime = time(NULL);\r\n\r\n                                        do {\r\n                                                iElapsedTime = time(NULL);\r\n                                        } while ( (iElapsedTime - iCurrentTime) < 3 );\r\n\r\n                                        system (\"clear\");\r\n\r\n                                        printf(\"\\nEnter each number separated with one space: \");\r\n                                        scanf(\"%d%d%d\", &iResp1, &iResp2, &iResp3);\r\n\r\n                                        if ( i1 == iResp1 && i2 == iResp2 && i3 == iResp3 ){\r\n                                                printf(\"\\nCongratulations!\\n\\n\");\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 3 );\r\n                                        }\r\n                                        else {\r\n                                                printf(\"\\nSorry, correct numbers were %d %d %d\\n\\n\", i1, i2, i3);\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 5 );\r\n                                        }\r\n                                }\r\n                                case 2:{\r\n                                        i1 = rand() %100;\r\n                                        i2 = rand() %100;\r\n                                        i3 = rand() %100;\r\n\r\n                                        printf(\"\\nConcentrate on the next three numbers\\n\");\r\n                                        printf(\"\\n%d\\t%d\\t%d\\n\", i1, i2, i3);\r\n\r\n                                        iCurrentTime = time(NULL);\r\n\r\n                                        do {\r\n                                                iElapsedTime = time(NULL);\r\n                                        } while ( (iElapsedTime - iCurrentTime) < 2 );\r\n\r\n                                        system (\"clear\");\r\n\r\n                                        printf(\"\\nEnter each number separated with one space: \");\r\n                                        scanf(\"%d%d%d\", &iResp1, &iResp2, &iResp3);\r\n\r\n                                        if ( i1 == iResp1 && i2 == iResp2 && i3 == iResp3 ){\r\n                                                printf(\"\\nCongratulations!\\n\\n\");\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 3 );\r\n                                        }\r\n                                        else {\r\n                                                printf(\"\\nSorry, correct numbers were %d %d %d\\n\\n\", i1, i2, i3);\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 5 );\r\n                                        }\r\n                                }\r\n                                case 3:{\r\n                                        i1 = rand() %100;\r\n                                        i2 = rand() %100;\r\n                                        i3 = rand() %100;\r\n                                        i4 = rand() %100;\r\n\r\n                                        printf(\"\\nConcentrate on the next four numbers\\n\");\r\n                                        printf(\"\\n%d\\t%d\\t%d\\t%d\\n\", i1, i2, i3, i4);\r\n\r\n                                        iCurrentTime = time(NULL);\r\n\r\n                                        do {\r\n                                                iElapsedTime = time(NULL);\r\n                                        } while ( (iElapsedTime - iCurrentTime) < 2 );\r\n\r\n                                        system (\"clear\");\r\n\r\n                                        printf(\"\\nEnter each number separated with one space: \");\r\n                                        scanf(\"%d%d%d%d\", &iResp1, &iResp2, &iResp3, &iResp4);\r\n\r\n                                        if ( i1 == iResp1 && i2 == iResp2 && i3 == iResp3 && i4 == iResp4 ){\r\n                                                printf(\"\\nCongratulations!\\n\\n\");\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 3 );\r\n                                        }\r\n                                        else {\r\n                                                printf(\"\\nSorry, correct numbers were %d %d %d %d\\n\\n\", i1, i2, i3, i4);\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 7 );\r\n                                        }\r\n                                }\r\n                                case 4:{\r\n                                        i1 = rand() %100;\r\n                                        i2 = rand() %100;\r\n                                        i3 = rand() %100;\r\n                                        i4 = rand() %100;\r\n\r\n                                        printf(\"\\nConcentrate on the next four numbers\\n\");\r\n                                        printf(\"\\n%d\\t%d\\t%d\\t%d\\n\", i1, i2, i3, i4);\r\n\r\n                                        iCurrentTime = time(NULL);\r\n\r\n                                        do {\r\n                                                iElapsedTime = time(NULL);\r\n                                        } while ( (iElapsedTime - iCurrentTime) < 1 );\r\n\r\n                                        system (\"clear\");\r\n\r\n                                        printf(\"\\nEnter each number separated with one space: \");\r\n                                        scanf(\"%d%d%d%d\", &iResp1, &iResp2, &iResp3, &iResp4);\r\n\r\n                                        if ( i1 == iResp1 && i2 == iResp2 && i3 == iResp3 && i4 == iResp4 ){\r\n                                                printf(\"\\nCongratulations!\\n\\n\");\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 3 );\r\n                                        }\r\n                                        else {\r\n                                                printf(\"\\nSorry, correct numbers were %d %d %d %d\\n\\n\", i1, i2, i3, i4);\r\n                                                iNow = time(NULL);\r\n                                                do {\r\n                                                        iWait = time(NULL);\r\n                                                } while ( (iWait - iNow) < 7 );\r\n                                        }\r\n                                }\r\n                        }\r\n                }\r\n                system (\"clear\");\r\n                printf(\"\\n\");\r\n                printf(\"\\nThank you for playing concentration\\n\\n\");\r\n                printf(\"\\n\");\r\n        }\r\n}","data":"Simple game writing in c language to guess the numbers"}
{"id":163,"key":"$ cat file.txt | awk {'first = $1; $1=\"\"; print $0'}|sed 's/^ //g' ","data":"Generic Linux awk command to show all columns after first column "}
{"id":164,"key":"&","data":"Generic Linux command Start a new process in the background"}
{"id":165,"key":"$ sed -i 's/$/pattern/g' file.txt","data":"Generic Linux command sed add pattern at the end of each line"}
{"id":166,"key":"$ alias","data":"Generic Linux command Create an alias •"}
{"id":167,"key":"$ apropos","data":"Generic Linux command Search Help manual pages (man -k)"}
{"id":168,"key":"$ apt","data":"Generic Linux command Search for and install software packages (Debian/Ubuntu)"}
{"id":169,"key":"$ apt-get","data":"Generic Linux command Search for and install software packages (Debian/Ubuntu)"}
{"id":170,"key":"$ aptitude","data":"Generic Linux command Search for and install software packages (Debian/Ubuntu)"}
{"id":171,"key":"$ aspell","data":"Generic Linux command Spell Checker"}
{"id":172,"key":"$ at","data":"Generic Linux command Schedule a command to run once at a particular time"}
{"id":173,"key":"$ awk","data":"Generic Linux command Find and Replace text, database sort/validate/index"}
{"id":174,"key":"$ basename","data":"Generic Linux command Strip directory and suffix from filenames"}
{"id":175,"key":"$ base32","data":"Generic Linux command Base32 encode/decode data and print to standard output"}
{"id":176,"key":"$ base64","data":"Generic Linux command Base64 encode/decode data and print to standard output"}
{"id":177,"key":"$ bash","data":"Generic Linux command GNU Bourne-Again SHell"}
{"id":178,"key":"$ bc","data":"Generic Linux command Arbitrary precision calculator language"}
{"id":179,"key":"$ bg","data":"Generic Linux command Send to background"}
{"id":180,"key":"$ bind","data":"Generic Linux command Set or display readline key and function bindings •"}
{"id":181,"key":"$ break","data":"Generic Linux command Exit from a loop •"}
{"id":182,"key":"$ builtin","data":"Generic Linux command Run a shell builtin"}
{"id":183,"key":"$ bzip2","data":"Generic Linux command Compress or decompress named file(s)"}
{"id":184,"key":"$ cal","data":"Generic Linux command Display a calendar"}
{"id":185,"key":"$ caller","data":"Generic Linux command Return the context of any active subroutine call •"}
{"id":186,"key":"$ case","data":"Generic Linux command Conditionally perform a command"}
{"id":187,"key":"$ cat","data":"Generic Linux command Concatenate and print (display) the content of files"}
{"id":188,"key":"$ cd","data":"Generic Linux command Change Directory"}
{"id":189,"key":"$ cfdisk","data":"Generic Linux command Partition table manipulator for Linux"}
{"id":190,"key":"$ chattr","data":"Generic Linux command Change file attributes on a Linux file system"}
{"id":191,"key":"$ chgrp","data":"Generic Linux command Change group ownership"}
{"id":192,"key":"$ chmod","data":"Generic Linux command Change access permissions"}
{"id":193,"key":"$ chown","data":"Generic Linux command Change file owner and group"}
{"id":194,"key":"$ chpasswd","data":"Generic Linux command Update passwords in batch mode"}
{"id":195,"key":"$ chroot","data":"Generic Linux command Run a command with a different root directory"}
{"id":196,"key":"$ chkconfig","data":"Generic Linux command System services (runlevel)"}
{"id":197,"key":"$ cksum","data":"Generic Linux command Print CRC checksum and byte counts"}
{"id":198,"key":"$ clear","data":"Generic Linux command Clear terminal screen"}
{"id":199,"key":"$ cmp","data":"Generic Linux command Compare two files"}
{"id":200,"key":"$ comm","data":"Generic Linux command Compare two sorted files line by line"}
{"id":201,"key":"$ command","data":"Generic Linux command Run a command - ignoring shell functions •"}
{"id":202,"key":"$ continue","data":"Generic Linux command Resume the next iteration of a loop •"}
{"id":203,"key":"$ cp","data":"Generic Linux command Copy one or more files to another location"}
{"id":204,"key":"$ cpio","data":"Generic Linux command Copy files to and from archives"}
{"id":205,"key":"$ cron","data":"Generic Linux command Daemon to execute scheduled commands"}
{"id":206,"key":"$ crontab","data":"Generic Linux command Schedule a command to run at a later time"}
{"id":207,"key":"$ csplit","data":"Generic Linux command Split a file into context-determined pieces"}
{"id":208,"key":"$ curl","data":"Generic Linux command Transfer data from or to a server"}
{"id":209,"key":"$ cut","data":"Generic Linux command Divide a file into several parts"}
{"id":210,"key":"$ date","data":"Generic Linux command Display or change the date & time"}
{"id":211,"key":"$ dc","data":"Generic Linux command Desk Calculator"}
{"id":212,"key":"$ dd","data":"Generic Linux command Data Duplicator - convert and copy a file, write disk headers, boot records"}
{"id":213,"key":"$ ddrescue","data":"Generic Linux command Data recovery tool"}
{"id":214,"key":"$ declare","data":"Generic Linux command Declare variables and give them attributes •"}
{"id":215,"key":"$ df","data":"Generic Linux command Display free disk space"}
{"id":216,"key":"$ diff","data":"Generic Linux command Display the differences between two files"}
{"id":217,"key":"$ diff3","data":"Generic Linux command Show differences among three files"}
{"id":218,"key":"$ dig","data":"Generic Linux command DNS lookup"}
{"id":219,"key":"$ dir","data":"Generic Linux command Briefly list directory contents"}
{"id":220,"key":"$ dircolors","data":"Generic Linux command Colour setup for 'ls'"}
{"id":221,"key":"$ dirname","data":"Generic Linux command Convert a full pathname to just a path"}
{"id":222,"key":"$ dirs","data":"Generic Linux command Display list of remembered directories"}
{"id":223,"key":"$ dos2unix","data":"Generic Linux command Windows/MAC to UNIX text file format converter"}
{"id":224,"key":"$ dmesg","data":"Generic Linux command Print kernel & driver messages"}
{"id":225,"key":"$ dpkg","data":"Generic Linux command Package manager (Debian/Ubuntu)."}
{"id":226,"key":"$ du","data":"Generic Linux command Estimate file space usage"}
{"id":227,"key":"$ echo","data":"Generic Linux command Display message on screen •"}
{"id":228,"key":"$ egrep","data":"Generic Linux command Search file(s) for lines that match an extended expression"}
{"id":229,"key":"$ eject","data":"Generic Linux command Eject removable media"}
{"id":230,"key":"$ enable","data":"Generic Linux command Enable and disable builtin shell commands •"}
{"id":231,"key":"$ env","data":"Generic Linux command Environment variables"}
{"id":232,"key":"$ ethtool","data":"Generic Linux command Ethernet card settings"}
{"id":233,"key":"$ eval","data":"Generic Linux command Evaluate several commands/arguments"}
{"id":234,"key":"$ exec","data":"Generic Linux command Execute a command"}
{"id":235,"key":"$ exit","data":"Generic Linux command Exit the shell"}
{"id":236,"key":"$ expand","data":"Generic Linux command Convert tabs to spaces"}
{"id":237,"key":"$ export","data":"Generic Linux command Set an environment variable"}
{"id":238,"key":"$ expr","data":"Generic Linux command Evaluate expressions"}
{"id":239,"key":"$ false","data":"Generic Linux command Do nothing, unsuccessfully"}
{"id":240,"key":"$ fdformat","data":"Generic Linux command Low-level format a floppy disk"}
{"id":241,"key":"$ fdisk","data":"Generic Linux command Partition table manipulator for Linux"}
{"id":242,"key":"$ fg","data":"Generic Linux command Send job to foreground"}
{"id":243,"key":"$ fgrep","data":"Generic Linux command Search file(s) for lines that match a fixed string"}
{"id":244,"key":"$ file","data":"Generic Linux command Determine file type"}
{"id":245,"key":"$ find","data":"Generic Linux command Search for files that meet a desired criteria"}
{"id":246,"key":"$ fmt","data":"Generic Linux command Reformat paragraph text"}
{"id":247,"key":"$ fold","data":"Generic Linux command Wrap text to fit a specified width"}
{"id":248,"key":"$ for","data":"Generic Linux command Expand words, and execute commands"}
{"id":249,"key":"$ format","data":"Generic Linux command Format disks or tapes"}
{"id":250,"key":"$ free","data":"Generic Linux command Display memory usage"}
{"id":251,"key":"$ fsck","data":"Generic Linux command File system consistency check and repair"}
{"id":252,"key":"$ ftp","data":"Generic Linux command File Transfer Protocol"}
{"id":253,"key":"$ function","data":"Generic Linux command Define Function Macros"}
{"id":254,"key":"$ fuser","data":"Generic Linux command Identify/kill the process that is accessing a file"}
{"id":255,"key":"$ gawk","data":"Generic Linux command Find and Replace text within file(s)"}
{"id":256,"key":"$ getopts","data":"Generic Linux command Parse positional parameters"}
{"id":257,"key":"$ getfacl","data":"Generic Linux command Get file access control lists"}
{"id":258,"key":"$ grep","data":"Generic Linux command Search file(s) for lines that match a given pattern"}
{"id":259,"key":"$ groupadd","data":"Generic Linux command Add a user security group"}
{"id":260,"key":"$ groupdel","data":"Generic Linux command Delete a group"}
{"id":261,"key":"$ groupmod","data":"Generic Linux command Modify a group"}
{"id":262,"key":"$ groups","data":"Generic Linux command Print group names a user is in"}
{"id":263,"key":"$ gzip","data":"Generic Linux command Compress or decompress named file(s)"}
{"id":264,"key":"$ hash","data":"Generic Linux command Remember the full pathname of a name argument"}
{"id":265,"key":"$ head","data":"Generic Linux command Output the first part of file(s)"}
{"id":266,"key":"$ help","data":"Generic Linux command Display help for a built-in command •"}
{"id":267,"key":"$ history","data":"Generic Linux command Command History"}
{"id":268,"key":"$ hostname","data":"Generic Linux command Print or set system name"}
{"id":269,"key":"$ htop","data":"Generic Linux command Interactive process viewer"}
{"id":270,"key":"$ iconv","data":"Generic Linux command Convert the character set of a file"}
{"id":271,"key":"$ id","data":"Generic Linux command Print user and group id's"}
{"id":272,"key":"$ if","data":"Generic Linux command Conditionally perform a command"}
{"id":273,"key":"$ ifconfig","data":"Generic Linux command Configure a network interface"}
{"id":274,"key":"$ ifdown","data":"Generic Linux command Stop a network interface"}
{"id":275,"key":"$ ifup","data":"Generic Linux command Start a network interface up"}
{"id":276,"key":"$ import","data":"Generic Linux command Capture an X server screen and save the image to file"}
{"id":277,"key":"$ install","data":"Generic Linux command Copy files and set attributes"}
{"id":278,"key":"$ iostat","data":"Generic Linux command Report CPU and i/o statistics"}
{"id":279,"key":"$ ip","data":"Generic Linux command Routing, devices and tunnels"}
{"id":280,"key":"$ jobs","data":"Generic Linux command List active jobs •"}
{"id":281,"key":"$ join","data":"Generic Linux command Join lines on a common field"}
{"id":282,"key":"$ kill","data":"Generic Linux command Kill a process by specifying its PID"}
{"id":283,"key":"$ killall","data":"Generic Linux command Kill processes by name"}
{"id":284,"key":"$ klist","data":"Generic Linux command List cached Kerberos tickets"}
{"id":285,"key":"$ less","data":"Generic Linux command Display output one screen at a time"}
{"id":286,"key":"$ let","data":"Generic Linux command Perform arithmetic on shell variables •"}
{"id":287,"key":"$ link","data":"Generic Linux command Create a link to a file"}
{"id":288,"key":"$ ln","data":"Generic Linux command Create a symbolic link to a file"}
{"id":289,"key":"$ local","data":"Generic Linux command Create a function variable •"}
{"id":290,"key":"$ locate","data":"Generic Linux command Find files"}
{"id":291,"key":"$ logname","data":"Generic Linux command Print current login name"}
{"id":292,"key":"$ logout","data":"Generic Linux command Exit a login shell •"}
{"id":293,"key":"$ look","data":"Generic Linux command Display lines beginning with a given string"}
{"id":294,"key":"$ lpc","data":"Generic Linux command Line printer control program"}
{"id":295,"key":"$ lpr","data":"Generic Linux command Print files"}
{"id":296,"key":"$ lprint","data":"Generic Linux command Print a file"}
{"id":297,"key":"$ lprintd","data":"Generic Linux command Delete a print job"}
{"id":298,"key":"$ lprintq","data":"Generic Linux command List the print queue"}
{"id":299,"key":"$ lprm","data":"Generic Linux command Remove jobs from the print queue"}
{"id":300,"key":"$ lsattr","data":"Generic Linux command List file attributes on a Linux second extended file system"}
{"id":301,"key":"$ lsblk","data":"Generic Linux command List block devices"}
{"id":302,"key":"$ ls","data":"Generic Linux command List information about file(s)"}
{"id":303,"key":"$ lsof","data":"Generic Linux command List open files"}
{"id":304,"key":"$ lspci","data":"Generic Linux command List all PCI devices"}
{"id":305,"key":"$ make","data":"Generic Linux command Recompile a group of programs"}
{"id":306,"key":"$ man","data":"Generic Linux command Help manual"}
{"id":307,"key":"$ mapfile","data":"Generic Linux command Read lines from standard input into an indexed array variable •"}
{"id":308,"key":"$ mkdir","data":"Generic Linux command Create new folder(s)"}
{"id":309,"key":"$ mkfifo","data":"Generic Linux command Make FIFOs (named pipes)"}
{"id":310,"key":"$ mkfile","data":"Generic Linux command Make a file"}
{"id":311,"key":"$ mkisofs","data":"Generic Linux command Create a hybrid ISO9660/JOLIET/HFS filesystem"}
{"id":312,"key":"$ mknod","data":"Generic Linux command Make block or character special files"}
{"id":313,"key":"$ mktemp","data":"Generic Linux command Make a temporary file"}
{"id":314,"key":"$ more","data":"Generic Linux command Display output one screen at a time"}
{"id":315,"key":"$ most","data":"Generic Linux command Browse or page through a text file"}
{"id":316,"key":"$ mount","data":"Generic Linux command Mount a file system"}
{"id":317,"key":"$ mtools","data":"Generic Linux command Manipulate MS-DOS files"}
{"id":318,"key":"$ mtr","data":"Generic Linux command Network diagnostics (traceroute/ping)"}
{"id":319,"key":"$ mv","data":"Generic Linux command Move or rename files or directories"}
{"id":320,"key":"$ mmv","data":"Generic Linux command Mass Move and rename (files)"}
{"id":321,"key":"$ nc","data":"Generic Linux command Netcat, read and write data across networks"}
{"id":322,"key":"$ netstat","data":"Generic Linux command Networking connections/stats"}
{"id":323,"key":"$ nft","data":"Generic Linux command nftables for packet filtering and classification"}
{"id":324,"key":"$ nice","data":"Generic Linux command Set the priority of a command or job"}
{"id":325,"key":"$ nl","data":"Generic Linux command Number lines and write files"}
{"id":326,"key":"$ nohup","data":"Generic Linux command Run a command immune to hangups"}
{"id":327,"key":"$ notify-send","data":"Generic Linux command Send desktop notifications"}
{"id":328,"key":"$ nslookup","data":"Generic Linux command Query Internet name servers interactively"}
{"id":329,"key":"$ open","data":"Generic Linux command Open a file in its default application"}
{"id":330,"key":"$ op","data":"Generic Linux command Operator access"}
{"id":331,"key":"$ passwd","data":"Generic Linux command Modify a user password"}
{"id":332,"key":"$ paste","data":"Generic Linux command Merge lines of files"}
{"id":333,"key":"$ pathchk","data":"Generic Linux command Check file name portability"}
{"id":334,"key":"$ Perf","data":"Generic Linux command Performance analysis tools for Linux"}
{"id":335,"key":"$ ping","data":"Generic Linux command Test a network connection"}
{"id":336,"key":"$ pgrep","data":"Generic Linux command List processes by name"}
{"id":337,"key":"$ pkill","data":"Generic Linux command Kill processes by name"}
{"id":338,"key":"$ popd","data":"Generic Linux command Restore the previous value of the current directory"}
{"id":339,"key":"$ pr","data":"Generic Linux command Prepare files for printing"}
{"id":340,"key":"$ printcap","data":"Generic Linux command Printer capability database"}
{"id":341,"key":"$ printenv","data":"Generic Linux command Print environment variables"}
{"id":342,"key":"$ printf","data":"Generic Linux command Format and print data •"}
{"id":343,"key":"$ ps","data":"Generic Linux command Process status"}
{"id":344,"key":"$ pushd","data":"Generic Linux command Save and then change the current directory"}
{"id":345,"key":"$ pv","data":"Generic Linux command Monitor the progress of data through a pipe"}
{"id":346,"key":"$ pwd","data":"Generic Linux command Print Working Directory"}
{"id":347,"key":"$ quota","data":"Generic Linux command Display disk usage and limits"}
{"id":348,"key":"$ quotacheck","data":"Generic Linux command Scan a file system for disk usage"}
{"id":349,"key":"$ ram","data":"Generic Linux command ram disk device"}
{"id":350,"key":"$ rar","data":"Generic Linux command Archive files with compression"}
{"id":351,"key":"$ rcp","data":"Generic Linux command Copy files between two machines"}
{"id":352,"key":"$ read","data":"Generic Linux command Read a line from standard input •"}
{"id":353,"key":"$ readarray","data":"Generic Linux command Read from stdin into an array variable •"}
{"id":354,"key":"$ readonly","data":"Generic Linux command Mark variables/functions as readonly"}
{"id":355,"key":"$ reboot","data":"Generic Linux command Reboot the system"}
{"id":356,"key":"$ rename","data":"Generic Linux command Rename files"}
{"id":357,"key":"$ renice","data":"Generic Linux command Alter priority of running processes"}
{"id":358,"key":"$ remsync","data":"Generic Linux command Synchronize remote files via email"}
{"id":359,"key":"$ return","data":"Generic Linux command Exit a shell function"}
{"id":360,"key":"$ rev","data":"Generic Linux command Reverse lines of a file"}
{"id":361,"key":"$ rm","data":"Generic Linux command Remove files"}
{"id":362,"key":"$ rmdir","data":"Generic Linux command Remove folder(s)"}
{"id":363,"key":"$ rsync","data":"Generic Linux command Remote file copy (Synchronize file trees)"}
{"id":364,"key":"$ screen","data":"Generic Linux command Multiplex terminal, run remote shells via ssh"}
{"id":365,"key":"$ scp","data":"Generic Linux command Secure copy (remote file copy)"}
{"id":366,"key":"$ sdiff","data":"Generic Linux command Merge two files interactively"}
{"id":367,"key":"$ sed","data":"Generic Linux command Stream Editor"}
{"id":368,"key":"$ select","data":"Generic Linux command Accept user choices via keyboard input"}
{"id":369,"key":"$ seq","data":"Generic Linux command Print numeric sequences"}
{"id":370,"key":"$ set","data":"Generic Linux command Manipulate shell variables and functions"}
{"id":371,"key":"$ setfacl","data":"Generic Linux command Set file access control lists."}
{"id":372,"key":"$ sftp","data":"Generic Linux command Secure File Transfer Program"}
{"id":373,"key":"$ sha256sum","data":"Generic Linux command Compute and check SHA256 (256-bit) checksums"}
{"id":374,"key":"$ shift","data":"Generic Linux command Shift positional parameters"}
{"id":375,"key":"$ shopt","data":"Generic Linux command Shell Options"}
{"id":376,"key":"$ shuf","data":"Generic Linux command Generate random permutations"}
{"id":377,"key":"$ shutdown","data":"Generic Linux command Shutdown or restart linux"}
{"id":378,"key":"$ sleep","data":"Generic Linux command Delay for a specified time"}
{"id":379,"key":"$ slocate","data":"Generic Linux command Find files"}
{"id":380,"key":"$ sort","data":"Generic Linux command Sort text files"}
{"id":381,"key":"$ source","data":"Generic Linux command Run commands from a file '.' •"}
{"id":382,"key":"$ split","data":"Generic Linux command Split a file into fixed-size pieces"}
{"id":383,"key":"$ ss","data":"Generic Linux command Socket Statistics"}
{"id":384,"key":"$ ssh","data":"Generic Linux command Secure Shell client (remote login program)"}
{"id":385,"key":"$ stat","data":"Generic Linux command Display file or file system status"}
{"id":386,"key":"$ strace","data":"Generic Linux command Trace system calls and signals"}
{"id":387,"key":"$ su","data":"Generic Linux command Substitute user identity"}
{"id":388,"key":"$ sudo","data":"Generic Linux command Execute a command as another user"}
{"id":389,"key":"$ sum","data":"Generic Linux command Print a checksum for a file"}
{"id":390,"key":"$ suspend","data":"Generic Linux command Suspend execution of this shell •"}
{"id":391,"key":"$ sync","data":"Generic Linux command Synchronize data on disk with memory"}
{"id":392,"key":"$ tail","data":"Generic Linux command Output the last part of a file"}
{"id":393,"key":"$ tar","data":"Generic Linux command Store, list or extract files in an archive"}
{"id":394,"key":"$ tee","data":"Generic Linux command Redirect output to multiple files"}
{"id":395,"key":"$ test","data":"Generic Linux command Evaluate a conditional expression"}
{"id":396,"key":"$ time","data":"Generic Linux command Measure Program running time"}
{"id":397,"key":"$ timeout","data":"Generic Linux command Run a command with a time limit"}
{"id":398,"key":"$ times","data":"Generic Linux command User and system times"}
{"id":399,"key":"$ tmux","data":"Generic Linux command Terminal multiplexer"}
{"id":400,"key":"$ touch","data":"Generic Linux command Change file timestamps"}
{"id":401,"key":"$ top","data":"Generic Linux command List processes running on the system"}
{"id":402,"key":"$ tput","data":"Generic Linux command Set terminal-dependent capabilities, color, position"}
{"id":403,"key":"$ traceroute","data":"Generic Linux command Trace Route to Host"}
{"id":404,"key":"$ trap","data":"Generic Linux command Execute a command when the shell receives a signal •"}
{"id":405,"key":"$ tr","data":"Generic Linux command Translate, squeeze, and/or delete characters"}
{"id":406,"key":"$ true","data":"Generic Linux command Do nothing, successfully"}
{"id":407,"key":"$ tsort","data":"Generic Linux command Topological sort"}
{"id":408,"key":"$ tty","data":"Generic Linux command Print filename of terminal on stdin"}
{"id":409,"key":"$ type","data":"Generic Linux command Describe a command •"}
{"id":410,"key":"$ ulimit","data":"Generic Linux command Limit user resources •"}
{"id":411,"key":"$ umask","data":"Generic Linux command Users file creation mask"}
{"id":412,"key":"$ umount","data":"Generic Linux command Unmount a device"}
{"id":413,"key":"$ unalias","data":"Generic Linux command Remove an alias •"}
{"id":414,"key":"$ uname","data":"Generic Linux command Print system information"}
{"id":415,"key":"$ unexpand","data":"Generic Linux command Convert spaces to tabs"}
{"id":416,"key":"$ uniq","data":"Generic Linux command Uniquify files"}
{"id":417,"key":"$ units","data":"Generic Linux command Convert units from one scale to another"}
{"id":418,"key":"$ unix2dos","data":"Generic Linux command UNIX to Windows or MAC text file format converter"}
{"id":419,"key":"$ unrar","data":"Generic Linux command Extract files from a rar archive"}
{"id":420,"key":"$ unset","data":"Generic Linux command Remove variable or function names"}
{"id":421,"key":"$ unshar","data":"Generic Linux command Unpack shell archive scripts"}
{"id":422,"key":"$ until","data":"Generic Linux command Execute commands (until error)"}
{"id":423,"key":"$ uptime","data":"Generic Linux command Show uptime"}
{"id":424,"key":"$ useradd","data":"Generic Linux command Create new user account"}
{"id":425,"key":"$ userdel","data":"Generic Linux command Delete a user account"}
{"id":426,"key":"$ usermod","data":"Generic Linux command Modify user account"}
{"id":427,"key":"$ users","data":"Generic Linux command List users currently logged in"}
{"id":428,"key":"$ uuencode","data":"Generic Linux command Encode a binary file"}
{"id":429,"key":"$ uudecode","data":"Generic Linux command Decode a file created by uuencode"}
{"id":430,"key":"-v","data":"Generic Linux command Verbosely list directory contents ('ls -l -b')"}
{"id":431,"key":"$ vdir","data":"Generic Linux command Verbosely list directory contents ('ls -l -b')"}
{"id":432,"key":"$ vi","data":"Generic Linux command Text Editor"}
{"id":433,"key":"$ vmstat","data":"Generic Linux command Report virtual memory statistics"}
{"id":434,"key":"$ w","data":"Generic Linux command Show who is logged on and what they are doing"}
{"id":435,"key":"$ wait","data":"Generic Linux command Wait for a process to complete •"}
{"id":436,"key":"$ watch","data":"Generic Linux command Execute/display a program periodically"}
{"id":437,"key":"$ wc","data":"Generic Linux command Print byte, word, and line counts"}
{"id":438,"key":"$ whereis","data":"Generic Linux command Search the user's , man pages and source files for a program"}
{"id":439,"key":"$ which","data":"Generic Linux command Search the user's  for a program file"}
{"id":440,"key":"$ while","data":"Generic Linux command Execute commands"}
{"id":441,"key":"$ who","data":"Generic Linux command Print all usernames currently logged in"}
{"id":442,"key":"$ whoami","data":"Generic Linux command Print the current user id and name ('id -un')"}
{"id":443,"key":"$ wget","data":"Generic Linux command Retrieve web pages or files via HTTP, HTTPS or FTP"}
{"id":444,"key":"$ write","data":"Generic Linux command Send a message to another user"}
{"id":445,"key":"$ xargs","data":"Generic Linux command Execute utility, passing constructed argument list(s)"}
{"id":446,"key":"$ xdg-open","data":"Generic Linux command Open a file or URL in the user's preferred application."}
{"id":447,"key":"$ xxd","data":"Generic Linux command Make a hexdump or do the reverse"}
{"id":448,"key":"$ xz","data":"Generic Linux command Compress or decompress .xz and .lzma files"}
{"id":449,"key":"$ yes","data":"Generic Linux command Print a string until interrupted"}
{"id":450,"key":"$ zip","data":"Generic Linux command Package and compress (archive) files"}
{"id":451,"key":"$ .","data":"Generic Linux command Run a command script in the current shell"}
{"id":452,"key":"!!","data":"Generic Linux command Run the last command again"}
{"id":453,"key":"###","data":"Generic Linux command Comment / Remark"}
{"id":454,"key":"$ go bug","data":"Go help start a bug report"}
{"id":455,"key":"$ go build ","data":"Go help compile packages and dependencies"}
{"id":456,"key":"$ go clean","data":"Go help remove object files and cached files"}
{"id":457,"key":"$ go doc","data":"Go help show documentation for package or symbol"}
{"id":458,"key":"$ go env","data":"Go help print Go environment information"}
{"id":459,"key":"$ go fix","data":"Go help update packages to use new APIs"}
{"id":460,"key":"$ go fmt","data":"Go help gofmt (reformat) package sources"}
{"id":461,"key":"$ go generate","data":"Go help generate Go files by processing source"}
{"id":462,"key":"$ go get","data":"Go help add dependencies to current module and install them"}
{"id":463,"key":"$ go install","data":"Go help compile and install packages and dependencies "}
{"id":464,"key":"$ go list","data":"Go help list packages or modules"}
{"id":465,"key":"$ go mod","data":"Go help module maintenance"}
{"id":466,"key":"$ go work ","data":"Go help workspace maintenance"}
{"id":467,"key":"$ go run ","data":"Go help compile and run Go program"}
{"id":468,"key":"$ go test","data":"Go help test packages"}
{"id":469,"key":"$ go tool","data":"Go help run specified go tool"}
{"id":470,"key":"$ go version","data":"Go help print Go version"}
{"id":471,"key":"$ go vet","data":"Go help report likely mistakes in packages"}
{"id":472,"key":"$ go help buildconstraint","data":"Go help build constraints"}
{"id":473,"key":"$ go help buildmode","data":"Go help build modes"}
{"id":474,"key":"$ go help c","data":"Go help calling between Go and C"}
{"id":475,"key":"$ go help cache","data":"Go help build and test caching"}
{"id":476,"key":"$ go help environment","data":"Go help environment variables"}
{"id":477,"key":"$ go help filetype","data":"Go help The go command examines the contents of a restricted set of files in each directory"}
{"id":478,"key":"$ go help go.mod","data":"Go help the go.mod file"}
{"id":479,"key":"$ go help gopath","data":"Go help GOPATH environment variable"}
{"id":480,"key":"$ go help gopath-get","data":"Go help legacy GOPATH go get"}
{"id":481,"key":"$ go help goproxy","data":"Go help support for module proxy protocol"}
{"id":482,"key":"$ go help importpath","data":"Go help for import path syntax"}
{"id":483,"key":"$ go help modules","data":"Go help modules, module versions, and more"}
{"id":484,"key":"$ go help module-get","data":"Go help module-aware go get"}
{"id":485,"key":"$ go help module-auth","data":"Go help module authentication using go.sum"}
{"id":486,"key":"$ go help packages","data":"Go help package lists and patterns"}
{"id":487,"key":"$ go help private","data":"Go help configuration for downloading non-public code"}
{"id":488,"key":"$ go help testflag","data":"Go help on testing flags options"}
{"id":489,"key":"$ go help testfunc","data":"Go help testing functions options"}
{"id":490,"key":"$ go help vcs","data":"Go help info on controlling version control with GOVCS"}
